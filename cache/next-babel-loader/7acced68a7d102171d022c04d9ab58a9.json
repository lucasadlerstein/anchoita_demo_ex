{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useReducer, useState, useEffect } from 'react';\nimport seleccionContext from './seleccionContext';\nimport seleccionReducer from './seleccionReducer';\nimport { NUEVA_ETAPA, NUEVA_V_PAIS, NUEVA_V_TIPO, VISIBILIDAD_CARRITO, VACIAR_CARRITO, CAMBIAR_CANTIDAD, AGREGAR_NUEVO, GET_STORAGE, CAMBIAR_BUSQUEDA, CAMBIAR_SHAKE } from '../../types/index';\n\nconst SeleccionState = ({\n  children\n}) => {\n  const stateInicial = {\n    etapa: null,\n    v_pais: null,\n    v_tipo: null,\n    carrito: false,\n    shake: false,\n    busqueda: '',\n    productosCarrito: [// {\n      //     categoria: 'comidas',\n      //     nombre: 'Bla bla bla',\n      //     cantidad: 1\n      // },\n      // {\n      //     categoria: 'comidas',\n      //     nombre: 'Bla bla blassss s s',\n      //     cantidad: 1\n      // },\n    ]\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(seleccionReducer, stateInicial);\n\n  const cambiarSeleccion = (llave, valor) => {\n    if (llave === 'etapa') {\n      dispatch({\n        type: NUEVA_ETAPA,\n        payload: valor\n      });\n    } else if (llave === 'v_tipo') {\n      dispatch({\n        type: NUEVA_V_TIPO,\n        payload: valor\n      });\n    } else if (llave === 'v_pais') {\n      dispatch({\n        type: NUEVA_V_PAIS,\n        payload: valor\n      });\n    }\n  };\n\n  const visibilidadCarrito = estado => {\n    dispatch({\n      type: VISIBILIDAD_CARRITO,\n      payload: !estado\n    });\n  };\n\n  const vaciarCarrito = () => {\n    dispatch({\n      type: VACIAR_CARRITO\n    });\n  };\n\n  const cambiarCantidad = (nombre, operacion) => {\n    const info = {\n      nombre,\n      operacion\n    };\n    dispatch({\n      type: CAMBIAR_CANTIDAD,\n      payload: info\n    });\n    actualizarStorage();\n    setTimeout(() => {\n      dispatch({\n        type: CAMBIAR_SHAKE\n      });\n    }, 1200);\n  };\n\n  const agregarNuevo = informacion => {\n    let existe = false;\n    state.productosCarrito.forEach(producto => {\n      if (producto.nombre === informacion.nombre) {\n        existe = true;\n      }\n    });\n\n    if (existe) {\n      const info = {\n        nombre: informacion.nombre,\n        operacion: 'suma'\n      };\n      dispatch({\n        type: CAMBIAR_CANTIDAD,\n        payload: info\n      });\n    } else {\n      dispatch({\n        type: AGREGAR_NUEVO,\n        payload: informacion\n      });\n    }\n\n    actualizarStorage();\n    setTimeout(() => {\n      dispatch({\n        type: CAMBIAR_SHAKE\n      });\n    }, 1200);\n  };\n\n  const actualizarStorage = () => {\n    setTimeout(() => {\n      localStorage.setItem('carrito', JSON.stringify(state.productosCarrito));\n    }, 500);\n  };\n\n  const getStorage = () => {\n    dispatch({\n      type: GET_STORAGE,\n      payload: JSON.parse(localStorage.getItem('carrito'))\n    });\n  };\n\n  const cambiarBusqueda = typeado => {\n    dispatch({\n      type: CAMBIAR_BUSQUEDA,\n      payload: typeado\n    });\n  };\n\n  return /*#__PURE__*/_jsx(seleccionContext.Provider, {\n    value: {\n      etapa: state.etapa,\n      v_pais: state.v_pais,\n      v_tipo: state.v_tipo,\n      carrito: state.carrito,\n      productosCarrito: state.productosCarrito,\n      busqueda: state.busqueda,\n      shake: state.shake,\n      cambiarSeleccion,\n      visibilidadCarrito,\n      vaciarCarrito,\n      cambiarCantidad,\n      agregarNuevo,\n      actualizarStorage,\n      getStorage,\n      cambiarBusqueda\n    },\n    children: children\n  });\n};\n\nexport default SeleccionState;","map":null,"metadata":{},"sourceType":"module"}